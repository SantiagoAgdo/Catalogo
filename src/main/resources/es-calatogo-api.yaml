openapi: 3.0.1
servers:
  - description: Índice Swagger
    url: https://api.mibanco.com.co
info:
  description: Servicios de entidad para la creación de catálogo.
  version: 0.0.1
  title: Catálogo_ES
  contact:
    name: MiBanco
    url: https://www.mibanco.com.co/
    email: api@mibanco.com.co
  license:
    name: GNU GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0.html'
tags:
  - name: Catálogo
    description: Gestión de catálogos
#----------------------------
# Endpoints del Entidad
#----------------------------
paths:
  /v1/es/catalogo:
    post:
      summary: Crear catálogo
      operationId: crearCatalogo
      requestBody:
        description: Tipo de catálogo
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CatalogoType"
      responses:
        "200":
          description: Crear catálogo exitoso.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/CatalogoType"
        "400":
          description: Petición con datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "No se encontraron datos de catálogo"
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Actualizar Catálogo
      operationId: updateCatalogo
      requestBody:
        description: Tipo de catálogo
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CatalogoType"
      responses:
        "200":
          description: Actualizar catálogo exitoso.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/CatalogoType"
        "400":
          description: Petición con datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "No se encontraron datos de Catálogo"
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/es/catalogo/{idCatalogo}:
    get:
      summary: Consultar catálogo
      operationId: ConsultarCatalogo
      parameters:
        - in: path
          name: idCatalogo
          required: true
          schema:
            type: string
          description: ID del catálogo
      responses:
        "200":
          description: Obtener catálogo exitoso.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/CatalogoType"
        "400":
          description: Petición con datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "No se encontraron datos de Catálogo"
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Eliminar catálogo
      operationId: DeleteCatalogo
      parameters:
        - in: path
          name: idCatalogo
          required: true
          schema:
            type: string
          description: ID del catálogo
      responses:
        "200":
          description: Eliminar catálogo exitoso.
          content:
            application/json:
              schema:
                type: boolean
        "400":
          description: Petición con datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "No se encontraron datos de Catálogo"
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/es/catalogo/nombre/{nombre}:
    get:
      summary: Consultar catálogo por nombre
      operationId: ConsultarCatalogoPorNombre
      parameters:
        - in: path
          name: nombre
          required: true
          schema:
            type: string
          description: Nombre del catálogo
      responses:
        "200":
          description: Obtener catálogo por nombre exitoso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CatalogoType"
        "400":
          description: Petición con datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "No se encontraron datos de Catálogo"
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


#---------------------------------------------
#Se declaran los Modelos/Schemas del servicio
#---------------------------------------------
components:
  schemas:
    #    TYPES
    CatalogoType:
      type: object
      properties:
        codigoDetalleCatalogo:
          type: string
        descripcionDetalleCatalogo:
          type: string
        idCatalogo:
          type: string
        nombreCatalogo:
          type: string
        padreIDCatalogo:
          type: string
    Error:
      type: object
      properties:
        status:
          type: integer
          example: 400
        message:
          type: string
          example: "The request is invalid."
      required:
        - status
        - message

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'